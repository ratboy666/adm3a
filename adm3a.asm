; ADM3A.ASM
;
; ADM3A TERMINAL
;
; WE PATCH THE BIOS JUMP TABLE. WE ARE GOING TO PATCH THE CONOUT
; (CONSOLE OUTPUT) JMP LOCATED AT 0ED0CH. THE JUMP ADDRESS IS
; THEN LOCATED AT 0ED0DH. WE NAME THIS BIOST. THIS CONTAINS
; 0F2ACH IN THE "NORMAL" CP/M LOAD. WE PATCH THIS TO ADM3A (THE
; INTERCEPTOR). BOTH THE ADDRESS BIOST AND THE CONTENTS CONOUT
; WILL CHANGE DEPENDING ON BIOS AND MEMORY SIZE. USE DDT TO
; DETERMINE THE PROPER VALUES TO USE.
;
; NOT THAT THE PATCH ROUTINE AT 100H AND THE UNPATCH AT 107H
; CANNOT END IN RET. THEY MUST BOTH EXIT WITH A WARM-START
; BECAUSE DDT IS STILL IN MEMORY WHEN THESE ARE CALLED.
;
; CONOUT ROUTINE (AND ADM3A) DO NOT SAVE ANY REGISTERS. THE Z80
; ALTERNATE REGISTERS MUST BE SAVED (FOR TURBO PASCAL, AMONG
; OTHERS). TO SAVE BYTES, THIS CODE USES Z80 RELATIVE JUMPS.
; FURTHERMORE, SINCE IT IS IN PAGE ZERO MEMORY, IT USED RST
; INSTRUCTIONS INSTEAD OF CALL.
;
; I USE LOCATONS 10H..13H TO STORE THE CURRENT DATE (FOR
; SUPERCALC 2 AND OTHERS). AS WELL, RST 1 (8) IS USED IF VIRTC
; IS USED AS A REAL TIME CLOCK INTERRUPT. AS A RESULT, THIS CODE
; STARTS AT 14H AND USES RST 3 AND RST 4 AS SUBROUTINE CALLS.
; DDT USES 38H, 39H AND 3AH FOR RST 7 BREAKPOINT, SO WE DO NOT
; USE THOSE THREE BYTES. THIS CODE ENDS AT 58H. CP/M DEAULT FCB
; IS AT 5CH.
;
BIOST   EQU     0ED0DH
CONOUT	EQU	0F2ACH
;
        ORG     14H
;
ESC:    MOV     A,C     ; '=' TO A
;
; ACTIVATE '=' TABLE ENTRY
; ON ESC, THE FUNCTION DISPATCH TABLE IS AMENDED TO LOOK FOR
; '='. ON THE '=' (WHICH SHOULD BE THE NEXT CHARACTER), ESC Y
; IS EMITED, AND THE NEXT 2 CHARACTERS ARE THE Y AND X FOR THE
; CURSOR. ON ALL CHARACTERS THROUGH THE DISPATCH TABLE, THE '='
; TABLE ENTRY IS DISABLED, ALLOWING '=' TO BE A NORMAL
; CHARACTER AGAIN.
;
        DB      18h,(RTN2-$-1) AND 0FFH  ; JR
        NOP
;
; CESC IS RST 3 (18H)
; THIS ROUTINE PUTS OUT ESC FOLLOWED BY THE CHARACTER IN C
;
        PUSH    B
        MVI     C,27
        RST	4	; COUT
        POP     B
        RST	4	; COUT
        RET
        NOP
;
; OUTPUT CHARACTER C IS RST 4 (20H)
; THIS ROUTINE PUTS OUT THE CHARACTER IN C USING THE ORIGINAL
; BIOS ROUTINE.
;
        DB	(JMP)
PATCH:	DW	CONOUT
;
; THIS IS THE CHARACTER DIPATCH TABLE. EACH ENTRY IS 3 BYTES:
; THE CHARACTER WE LOOK FOR, A PAYLOAD CHARACTER, THE LOW BYTE
; OF THE ROUTINE TO HANDLE THE CASE. THE TABLE ENDS ON THE FIRST
; 0 MATCH CHARACTER. AN '=' IS PUT INTO MODI ON THE ESC.
;
CTBL:   DB      27, '=', ESC
        DB      11, 'A', DOE
        DB      12, 'C', DOE
        DB      26, 'H', CTLZ
        DB      30, 'H', DOE
MODI:   DB      0,  'Y', DOE
        DB      0
;
	NOP
	NOP
;
; RST 7 (38H) IS USED AS A JMP FOR DDT
; DDT (SID/ZSID ETC) USE THIS TO ALLOW THE USE OF RST 7 FOR
; BREAKPOINTS.
;
DDT:
;
; NEXT AVAILABLE LOCATION IS 3BH (DDT USES 3 BYTES FOR JMP)
;
        ORG     3BH
;
; CHARACTER IS IN C, PSW, BC, DE, HL CAN BE DESTROYED, Z80
; ALTERNATE REGISTERS DO NEED TO BE PRESERVED.
;
ADM3A:  LXI     H,CTBL-1
TOP:    INX     H	; POINT TO CHAR TO MATCH
        MOV     A,M
        ORA     A       ; IF NOT END OF LIST, TO L4
        DB      20H,(L4-$-1) AND 0FFH ; JR NZ
;
; END OF FUNCTION LIST
;
        RST	4	; COUT OF CHARACTER (IN C)
RTN:    XRA     A       ; AND MAKE SURE MODI SET TO 0
RTN2:   STA     MODI
        RET
;
L4:     INX     H	; POINT TO PAYLOAD
        INX     H       ; POINT TO ADDRESS
        CMP     C       ; TO TOP IF NO MATCH
	DB	20H,(TOP-$-1) AND 0FFH ; JZ NZ
;
; MATCH, LOAD PAYLOAD CHARACTER TO C, DISPATCH
;
	MOV	B,M	; LOW ADDRESS
	DCX	H
        MOV     C,M     ; PAYLOAD CHARACTER
        MOV     L,B     ; H IS ALREADY 0, LOW BYTE OF ADDRESS
        PCHL            ; DISPATCH
;
CTLZ:   RST	3	; CESC HOME
        MVI     C,'J'
DOE:    RST	3	; CESC CLEAR SCREEN
	DB	18H,(RTN-$-1) AND 0FFH ; JR
;
; LAST BYTE OF THIS PATCH ENDS AT 58H, LEAVING 59H, 5AH, 5BH
; FREE (THREE BYTES). CP/M 2.2 FCB STARTS AT 5CH
;
	ORG	100H
;
; FOLLOWING CODE ENABLES (G100)
;
START:	LXI	H,ADM3A
	SHLD    BIOST
        RST	0
;
; FOLLOWING CODE REMOVES (G107)
;
        LXI     H,CONOUT
        SHLD    BIOST
        RST	0
;
        END     START

